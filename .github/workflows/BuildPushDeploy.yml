name: Build and Push Docker Image to ECR

on:
  # workflow_dispatch:
  #   inputs:
  #     run:
  #       description: 'Run'     

  push:
    branches:
      - '**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACTION_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.ACTION_ACCESS_SECRET }}
        aws-region: 'ap-southeast-1'
    
    - name: Login to Amazon ECR
      run: aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 015648027364.dkr.ecr.ap-southeast-1.amazonaws.com

    - name: Prepare ENV
      id: build_env
      run: |
        REPOSITORY=${{ github.repository }} echo "repository=${REPOSITORY,,}" >> "$GITHUB_OUTPUT" # steps.build_env.output.repository

    - name: Check if Docker Image Exists
      id: image_exists
      run: |
        IMAGE_TAG=${{ github.sha }}
        IMAGE_REPO="015648027364.dkr.ecr.ap-southeast-1.amazonaws.com/${{ steps.build_env.output.repository }}"
        if aws ecr describe-images --repository-name ${{ steps.build_env.output.repository }} --image-ids imageTag=$IMAGE_TAG --region ap-southeast-1; then
          echo "Image exists. Skipping build."
          echo "exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "Image does not exist. Proceeding with build."
          echo "exists=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Determine Dockerfile
      id: dockerfile
      run: |
        echo "path=${{ steps.build_env.output.repository }}/Dockerfile" >> "$GITHUB_OUTPUT"
        # if [ -f Dockerfile_${{ github.event.inputs.env }} ]; then
        #   echo "path=${{ github.event.inputs.repo }}/Dockerfile_${{ github.event.inputs.env }}" >> "$GITHUB_OUTPUT"
        # else
        #   echo "path=${{ github.event.inputs.repo }}/Dockerfile" >> "$GITHUB_OUTPUT"
        # fi

    - name: Build and Push Docker Image
      if: steps.image_exists.outputs.exists == 'false'
      run: |
        IMAGE_TAG=${{ github.sha }}
        IMAGE_REPO="015648027364.dkr.ecr.ap-southeast-1.amazonaws.com/${{ steps.build_env.output.repository }}"
        docker build --pull \
          --build-arg AWS_DEFAULT_REGION="ap-southeast-1" \
          --build-arg AWS_ACCESS_KEY_ID \
          --build-arg AWS_SECRET_ACCESS_KEY \
          --build-arg AWS_SESSION_TOKEN \
          --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }} \
          --build-arg APP_ENV=${{ github.event.inputs.env }} \
          -f ${{ steps.dockerfile.outputs.path }} \
          -t $IMAGE_REPO:$IMAGE_TAG .
          
        aws ecr create-repository --region ap-southeast-1 --repository-name ${{ steps.build_env.output.repository }} --image-tag-mutability IMMUTABLE || true
        docker push $IMAGE_REPO:$IMAGE_TAG
        docker rmi $IMAGE_REPO:$IMAGE_TAG
